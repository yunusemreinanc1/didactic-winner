name: macOS VNC Simple

on:
  workflow_dispatch:

jobs:
  secure-vnc:
    runs-on: macos-latest
    timeout-minutes: 3600

    steps:
      - name: System Configuration
        run: |
          # Disable all power management and screen locks
          sudo pmset -a displaysleep 0 sleep 0 disksleep 0 womp 0
          sudo defaults write /Library/Preferences/com.apple.screensaver askForPassword -int 0
          sudo defaults write /Library/Preferences/com.apple.screensaver askForPasswordDelay -int 0
          echo "✅ Power management disabled"

      - name: Create VNC User
        run: |
          password=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-16)
          
          # Create and configure user
          sudo dscl . -create /Users/vncuser
          sudo dscl . -create /Users/vncuser UserShell /bin/bash
          sudo dscl . -create /Users/vncuser RealName "VNC User"
          sudo dscl . -create /Users/vncuser UniqueID 1001
          sudo dscl . -create /Users/vncuser PrimaryGroupID 80
          sudo dscl . -create /Users/vncuser NFSHomeDirectory /Users/vncuser
          sudo dscl . -passwd /Users/vncuser "$password"
          sudo dscl . -append /Groups/admin GroupMembership vncuser
          sudo createhomedir -c -u vncuser
          
          # Store credentials
          echo "VNC_PASSWORD=$password" >> $GITHUB_ENV
          echo "VNC_USERNAME=vncuser" >> $GITHUB_ENV
          
          # Configure auto-login (this is key for avoiding black screen)
          sudo defaults write /Library/Preferences/com.apple.loginwindow autoLoginUser vncuser
          sudo defaults write /Library/Preferences/com.apple.loginwindow autoLoginUserUID 1001
          
          echo "✅ User created: vncuser / $password"

      - name: Install and Setup Tailscale
        run: |
          # Install Homebrew and Tailscale
          if ! command -v brew &> /dev/null; then
              /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
              eval "$(/opt/homebrew/bin/brew shellenv)"
          fi
          
          brew install tailscale
          
          # Setup Tailscale daemon
          sudo mkdir -p /var/run/tailscale /var/lib/tailscale
          sudo /opt/homebrew/bin/tailscaled \
            --state=/var/lib/tailscale/tailscaled.state \
            --socket=/var/run/tailscaled.socket &
          
          sleep 10
          
          # Connect to Tailscale
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-macos-$GITHUB_RUN_ID --reset
          
          # Get IP
          sleep 10
          tailscale_ip=$(sudo tailscale ip -4 | head -n1)
          echo "TAILSCALE_IP=$tailscale_ip" >> $GITHUB_ENV
          echo "✅ Tailscale connected: $tailscale_ip"

      - name: Enable VNC with Auto-Login
        run: |
          echo "Setting up VNC with automatic desktop access..."
          
          # Enable Screen Sharing
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
          
          # Wait for service
          sleep 15
          
          # Force login the user to create desktop session
          echo "Forcing user login to create desktop session..."
          
          # Create a script to automatically login and setup desktop
          cat > /tmp/setup_desktop.sh << 'EOF'
          #!/bin/bash
          
          # Switch to vncuser and setup desktop
          sudo -u vncuser -H bash << 'USEREOF'
          export HOME=/Users/vncuser
          cd /Users/vncuser
          
          # Set some basic preferences
          defaults write com.apple.finder ShowPathbar -bool true
          defaults write com.apple.finder ShowStatusBar -bool true
          
          # Create Desktop and Documents if they don't exist
          mkdir -p Desktop Documents Downloads
          
          # Start Finder to ensure desktop is active
          open -a Finder
          
          # Set a simple desktop background
          osascript -e 'tell application "System Events" to tell every desktop to set picture to "/System/Library/Desktop Pictures/Solid Colors/Stone.png"' 2>/dev/null || true
          
          echo "Desktop setup completed for vncuser"
          USEREOF
          
          EOF
          
          chmod +x /tmp/setup_desktop.sh
          /tmp/setup_desktop.sh
          
          # Verify VNC is working
          if netstat -an | grep -q "*.5900.*LISTEN"; then
              echo "✅ VNC Server active on port 5900"
          else
              echo "⚠️  VNC Server not detected, trying alternative activation..."
              sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
                -activate -configure -allowAccessFor -allUsers -privs -all
          fi

      - name: Create Simple Connection Info Page
        run: |
          # Create a simple static page (no server needed)
          mkdir -p /tmp/info
          cat > /tmp/info/connection.txt << EOF
          ═══════════════════════════════════════════════════
          macOS VNC CONNECTION INFORMATION
          ═══════════════════════════════════════════════════
          
          🌐 Server IP: $TAILSCALE_IP
          🔌 Port: 5900
          👤 Username: vncuser
          🔑 Password: $VNC_PASSWORD
          
          📱 ANDROID VNC SETUP:
          
          1. Download VNC app:
             • bVNC (recommended for macOS)
             • RealVNC Viewer
             • MultiVNC
          
          2. Create new connection:
             • Host: $TAILSCALE_IP
             • Port: 5900
             • Username: vncuser
             • Password: $VNC_PASSWORD
             • Auth Type: "Username & Password" (NOT VNC Password!)
          
          3. Connection settings:
             • Color: Medium or High
             • Encoding: Automatic
             • Compression: Medium
          
          🔧 TROUBLESHOOTING BLACK SCREEN:
          
          If you see black screen after connecting:
          1. Tap/click anywhere on the black area
          2. Press any key on virtual keyboard
          3. Wait 10-15 seconds for desktop to appear
          4. You may see a login screen - enter credentials above
          
          📋 LOGIN STEPS IF NEEDED:
          1. Click on the screen
          2. Type: vncuser
          3. Press Tab or Enter
          4. Type: $VNC_PASSWORD
          5. Press Enter
          
          ✅ Your macOS desktop should now be visible!
          
          EOF
          
          echo "✅ Connection info saved to /tmp/info/connection.txt"
          cat /tmp/info/connection.txt

      - name: Keep System Active
        run: |
          echo "Starting system keep-alive (prevents screen sleep and logout)..."
          
          # Simple keep-alive script
          while true; do
              current_time=$(date '+%H:%M:%S')
              echo "[$current_time] 🟢 macOS VNC Active - Server: $TAILSCALE_IP:5900"
              
              # Ensure Tailscale stays connected
              if ! sudo tailscale status | grep -q "logged in"; then
                  echo "Reconnecting Tailscale..."
                  sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} &
              fi
              
              # Ensure VNC service stays active
              if ! netstat -an | grep -q "*.5900.*LISTEN"; then
                  echo "Restarting VNC service..."
                  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist
              fi
              
              # Keep user logged in by simulating activity every 5 minutes
              sudo -u vncuser osascript -e 'tell application "System Events" to set position of mouse to {100, 100}' 2>/dev/null || true
              sleep 1
              sudo -u vncuser osascript -e 'tell application "System Events" to set position of mouse to {101, 101}' 2>/dev/null || true
              
              sleep 300  # Check every 5 minutes
          done
